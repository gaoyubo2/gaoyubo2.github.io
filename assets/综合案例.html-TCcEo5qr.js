import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,d as t}from"./app-D1py-eEI.js";const p={},e=t(`<p>定义两个集合，然后在集合中存储多个用户名称。然后完成如下的操作：</p><ol><li>第一个队伍只保留姓名长度为3的成员</li><li>第一个队伍筛选之后只要前3个人</li><li>第二个队伍只要姓张的成员</li><li>第二个队伍筛选之后不要前两个人</li><li>将两个队伍合并为一个队伍</li><li>根据姓名创建Person对象</li><li>打印整个队伍的Person信息</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;迪丽热巴&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;宋远桥&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;苏星河&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;老子&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;庄子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;孙子&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;洪七 公&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;古力娜扎&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张无忌&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三丰&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;赵丽颖&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;张二狗&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张天爱&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. 第一个队伍只保留姓名长度为3的成员</span>
    <span class="token comment">// 2. 第一个队伍筛选之后只要前3个人</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stream1 <span class="token operator">=</span> list1<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span>  s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span>
            <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 3. 第二个队伍只要姓张的成员</span>
    <span class="token comment">// 4. 第二个队伍筛选之后不要前两个人</span>
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stream2 <span class="token operator">=</span> list2<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span>
            s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;张&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 5. 将两个队伍合并为一个队伍</span>
    <span class="token comment">// 6. 根据姓名创建Person对象</span>
    <span class="token comment">// 7. 打印整个队伍的Person信息</span>
    <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>stream1<span class="token punctuation">,</span>stream2<span class="token punctuation">)</span>
            <span class="token comment">//.map(n-&gt; new Person(n))</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","综合案例.html.vue"]]),m=JSON.parse('{"path":"/guide/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/Stream/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html","title":"综合案例","lang":"zh-CN","frontmatter":{"title":"综合案例","order":4,"description":"定义两个集合，然后在集合中存储多个用户名称。然后完成如下的操作： 第一个队伍只保留姓名长度为3的成员 第一个队伍筛选之后只要前3个人 第二个队伍只要姓张的成员 第二个队伍筛选之后不要前两个人 将两个队伍合并为一个队伍 根据姓名创建Person对象 打印整个队伍的Person信息","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/guide/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/Stream/%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"疼了也不哭"}],["meta",{"property":"og:title","content":"综合案例"}],["meta",{"property":"og:description","content":"定义两个集合，然后在集合中存储多个用户名称。然后完成如下的操作： 第一个队伍只保留姓名长度为3的成员 第一个队伍筛选之后只要前3个人 第二个队伍只要姓张的成员 第二个队伍筛选之后不要前两个人 将两个队伍合并为一个队伍 根据姓名创建Person对象 打印整个队伍的Person信息"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"综合案例\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"","slug":"","link":"#","children":[]}],"git":{},"readingTime":{"minutes":1.09,"words":326},"filePathRelative":"guide/JDK8新特性/Stream/综合案例.md","autoDesc":true}');export{k as comp,m as data};

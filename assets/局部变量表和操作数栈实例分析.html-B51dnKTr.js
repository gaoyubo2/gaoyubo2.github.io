import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,d as t}from"./app-D1py-eEI.js";const o={},s=t(`<p>以圆形的周长公式为例进行分析，下面是Java方法的代码。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">float</span> <span class="token function">circumference</span><span class="token punctuation">(</span><span class="token keyword">float</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">float</span> pi <span class="token operator">=</span> <span class="token number">3.14f</span><span class="token punctuation">;</span>
    <span class="token keyword">float</span> area <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> pi <span class="token operator">*</span> r<span class="token punctuation">;</span>
    <span class="token keyword">return</span> area<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的方法会被<code>javac</code>编译器编译成如下字节码:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>00 ldc #4
02 fstore_1
03 fconst_2
04 fload_1
05 fmul
06 fload_0
07 fmul
08 fstore_2
09 fload_2
10 return
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面分析这段字节码的执行。</p><p>circumference（）方法的局部变量表大小是3，操作数栈深度是2。 假设调用方法时，传递给它的参数 是1.6f，方法开始执行前，帧的状态如图4-3所示。</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/606eef6934fcf73cb80105462148e5c2.png" alt="" style="zoom:50%;"><p>第一条指令是<code>ldc</code>，它把3.14f推入栈顶</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/9e83df88fe1d9620c5de37136d2bf708.png" alt="" style="zoom:50%;"><blockquote><p>上面是局部变量表和操作数栈过去的状态，最下面是当前状态。</p></blockquote><p>接着是<code>fstore_1</code>指令，它把栈顶的3.14f弹出，放到#1号局部变量中</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/206bf8bd0f758c08ab2a78d338a0544b.png" alt="" style="zoom:50%;"><p><code>fconst_2</code>指令把2.0f推到栈顶</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/43867513162068af4ef3f825074c3680.png" alt="" style="zoom:50%;"><p><code>fload_1</code>指令把#1号局部变量推入栈顶</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/a2496fd9f1796318a86159c2130cd109.png" alt="" style="zoom:50%;"><p><code>fmul</code>指令执行浮点数乘法。它把栈顶的两个浮点数弹出，相乘，然后把结果推入栈顶</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/385debd6b5049a142e228fc963993124.png" alt="" style="zoom:50%;"><p><code>fload_0</code>指令把#0号局部变量推入栈顶</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/9282463211403d6785953388513f3b31.png" alt="" style="zoom:50%;"><p><code>fmul</code>继续乘法计算</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/44c3aee0eb88c2af8b3fecb42acb7def.png" alt="" style="zoom:50%;"><p><code>fstore_2</code>指令把操作数栈顶的float值弹出，放入#2号局部变量表</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/235688a4c844d2857f5c062db23d9fb9.png" alt="" style="zoom:50%;"><p>最后<code>freturn</code>指令把操作数栈顶的float变量弹出，返回给方法调 用者</p><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/Golang实现JAVA虚拟机-运行时数据区/2023/12/14/4da196f053260be7cc0f56259794dd08.png" alt="" style="zoom:50%;">`,26),c=[s];function l(i,d){return a(),n("div",null,c)}const m=e(o,[["render",l],["__file","局部变量表和操作数栈实例分析.html.vue"]]),g=JSON.parse('{"path":"/book/Go%E5%AE%9E%E7%8E%B0Java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A8%E5%92%8C%E6%93%8D%E4%BD%9C%E6%95%B0%E6%A0%88%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html","title":"局部变量表和操作数栈实例分析","lang":"zh-CN","frontmatter":{"title":"局部变量表和操作数栈实例分析","order":4,"description":"以圆形的周长公式为例进行分析，下面是Java方法的代码。 上面的方法会被javac编译器编译成如下字节码: 下面分析这段字节码的执行。 circumference（）方法的局部变量表大小是3，操作数栈深度是2。 假设调用方法时，传递给它的参数 是1.6f，方法开始执行前，帧的状态如图4-3所示。 第一条指令是ldc，它把3.14f推入栈顶 上面是局部变...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/book/Go%E5%AE%9E%E7%8E%B0Java%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA/%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A8%E5%92%8C%E6%93%8D%E4%BD%9C%E6%95%B0%E6%A0%88%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"疼了也不哭"}],["meta",{"property":"og:title","content":"局部变量表和操作数栈实例分析"}],["meta",{"property":"og:description","content":"以圆形的周长公式为例进行分析，下面是Java方法的代码。 上面的方法会被javac编译器编译成如下字节码: 下面分析这段字节码的执行。 circumference（）方法的局部变量表大小是3，操作数栈深度是2。 假设调用方法时，传递给它的参数 是1.6f，方法开始执行前，帧的状态如图4-3所示。 第一条指令是ldc，它把3.14f推入栈顶 上面是局部变..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"局部变量表和操作数栈实例分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":2.57,"words":771},"filePathRelative":"book/Go实现Java虚拟机/运行时数据区/局部变量表和操作数栈实例分析.md","autoDesc":true}');export{m as comp,g as data};

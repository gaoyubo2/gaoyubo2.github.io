import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,b as n,f as e,e as s,d as l}from"./app-D1py-eEI.js";const i={},r=n("p",null,[n("strong",null,"装饰"),s("是一种结构设计模式， 允许你通过将对象放入特殊封装对象中来为原对象增加新的行为。")],-1),u=n("p",null,"由于目标对象和装饰器遵循同一接口， 因此你可用装饰来对对象进行无限次的封装。 结果对象将获得所有封装器叠加而来的行为。",-1),d=n("p",null,[n("strong",null,"使用示例："),s(" 装饰在 Java 代码中可谓是标准配置， 尤其是在与流式加载相关的代码中。")],-1),k=n("p",null,"Java 核心程序库中有一些关于装饰的示例：",-1),v={href:"http://docs.oracle.com/javase/8/docs/api/java/io/InputStream.html",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"java.io.InputStream",-1),b={href:"http://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"Output­Stream",-1),g={href:"http://docs.oracle.com/javase/8/docs/api/java/io/Reader.html",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"Reader",-1),y={href:"http://docs.oracle.com/javase/8/docs/api/java/io/Writer.html",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"Writer",-1),j={href:"http://docs.oracle.com/javase/8/docs/api/java/util/Collections.html",target:"_blank",rel:"noopener noreferrer"},w=n("code",null,"java.util.Collections",-1),O={href:"http://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#checkedCollection-java.util.Collection-java.lang.Class-",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"checked­XXX()",-1),E={href:"http://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#synchronizedCollection-java.util.Collection-",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"synchronized­XXX()",-1),C={href:"http://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#unmodifiableCollection-java.util.Collection-",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"unmodifiable­XXX()",-1),V={href:"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequestWrapper.html",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"javax.servlet.http.HttpServletRequestWrapper",-1),P={href:"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletResponseWrapper.html",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"Http­Servlet­Response­Wrapper",-1),q=l(`<p><strong>识别方法：</strong> 装饰可通过以当前类或对象为参数的创建方法或构造函数来识别。</p><h2 id="订单优惠券与会员机制" tabindex="-1"><a class="header-anchor" href="#订单优惠券与会员机制"><span>订单优惠券与会员机制</span></a></h2><h3 id="order-订单" tabindex="-1"><a class="header-anchor" href="#order-订单"><span>Order:订单</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> price<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> orderId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> orderNo<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> pay<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> promotions<span class="token punctuation">;</span><span class="token comment">//参与的活动</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="decorators" tabindex="-1"><a class="header-anchor" href="#decorators"><span>decorators</span></a></h3><h4 id="decorators-orderdecorator-java-定义了装饰方法" tabindex="-1"><a class="header-anchor" href="#decorators-orderdecorator-java-定义了装饰方法"><span>decorators/OrderDecorator.java:定义了装饰方法</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 订单装饰者接口
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderDecorator</span> <span class="token punctuation">{</span>
    <span class="token comment">//抽象装饰方法</span>
    <span class="token class-name">Order</span> <span class="token function">decorator</span><span class="token punctuation">(</span><span class="token class-name">Order</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="decorators-viporderdecorator-java-vip机制装饰器" tabindex="-1"><a class="header-anchor" href="#decorators-viporderdecorator-java-vip机制装饰器"><span>decorators/VipOrderDecorator.java:VIP机制装饰器</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * vip装饰者
 */</span>
<span class="token comment">// VIP 订单装饰器</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">VipOrderDecorator</span> <span class="token keyword">implements</span> <span class="token class-name">OrderDecorator</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Vip</span> vip<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">VipOrderDecorator</span><span class="token punctuation">(</span><span class="token class-name">Vip</span> vip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>vip <span class="token operator">=</span> vip<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Order</span> <span class="token function">decorator</span><span class="token punctuation">(</span><span class="token class-name">Order</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        order<span class="token punctuation">.</span><span class="token function">setPay</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getPay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> vip<span class="token punctuation">.</span><span class="token function">getDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 活动促销</span>
        <span class="token class-name">String</span> promotions <span class="token operator">=</span> <span class="token string">&quot;VIP享受&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>vip<span class="token punctuation">.</span><span class="token function">getDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;折优惠&quot;</span><span class="token punctuation">;</span>
        order<span class="token punctuation">.</span><span class="token function">getPromotions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>promotions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> order<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="decorators-couponorderdecorator-java-vip机制装饰器" tabindex="-1"><a class="header-anchor" href="#decorators-couponorderdecorator-java-vip机制装饰器"><span>decorators/CouponOrderDecorator.java:VIP机制装饰器</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 优惠券装饰者
 */</span>
<span class="token comment">// 优惠券订单装饰器</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CouponOrderDecorator</span> <span class="token keyword">implements</span> <span class="token class-name">OrderDecorator</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Coupon</span> coupon<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">CouponOrderDecorator</span><span class="token punctuation">(</span><span class="token class-name">Coupon</span> coupon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>coupon <span class="token operator">=</span> coupon<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Order</span> <span class="token function">decorator</span><span class="token punctuation">(</span><span class="token class-name">Order</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        order<span class="token punctuation">.</span><span class="token function">setPay</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span><span class="token function">getPay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> coupon<span class="token punctuation">.</span><span class="token function">getDiscountAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 活动促销</span>
        <span class="token class-name">String</span> promotions <span class="token operator">=</span> <span class="token string">&quot;使用&quot;</span> <span class="token operator">+</span> coupon<span class="token punctuation">.</span><span class="token function">getDiscountAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;元优惠券&quot;</span><span class="token punctuation">;</span>
        order<span class="token punctuation">.</span><span class="token function">getPromotions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>promotions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> order<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constants" tabindex="-1"><a class="header-anchor" href="#constants"><span>constants</span></a></h3><h4 id="constants-vip-java-会员机制的折扣" tabindex="-1"><a class="header-anchor" href="#constants-vip-java-会员机制的折扣"><span>constants/Vip.java:会员机制的折扣</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 活动枚举
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Vip</span> <span class="token punctuation">{</span>
    <span class="token function">VIP1</span><span class="token punctuation">(</span><span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 折扣 0.9</span>
    <span class="token function">VIP2</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 折扣 0.8</span>
    <span class="token function">VIP3</span><span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 折扣 0.7</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> discount<span class="token punctuation">;</span>

    <span class="token class-name">Vip</span><span class="token punctuation">(</span><span class="token keyword">double</span> discount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>discount <span class="token operator">=</span> discount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getDiscount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> discount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="constants-coupon-java-优惠券的面值" tabindex="-1"><a class="header-anchor" href="#constants-coupon-java-优惠券的面值"><span>constants/Coupon.java:优惠券的面值</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 优惠券枚举类</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Coupon</span> <span class="token punctuation">{</span>
    <span class="token function">FIVE_OFF</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 优惠 5 元</span>
    <span class="token function">TEN_OFF</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">// 优惠 10 元</span>
    <span class="token function">TWENTY_OFF</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 优惠 20 元</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">double</span> discountAmount<span class="token punctuation">;</span>

    <span class="token class-name">Coupon</span><span class="token punctuation">(</span><span class="token keyword">double</span> discountAmount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>discountAmount <span class="token operator">=</span> discountAmount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getDiscountAmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> discountAmount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>Demo</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//创建一个原始订单</span>
        <span class="token class-name">Order</span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token number">10d</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;0001&quot;</span><span class="token punctuation">,</span> <span class="token number">10d</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//创建装饰者子类对象</span>
        <span class="token comment">/*
             VIP1(0.9), // 折扣 0.9
             VIP2(0.8), // 折扣 0.8
             VIP3(0.7); // 折扣 0.7
         */</span>
        <span class="token class-name">OrderDecorator</span> vipOrderDecorator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VipOrderDecorator</span><span class="token punctuation">(</span><span class="token class-name">Vip</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;VIP2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">OrderDecorator</span> couponOrderDecorator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CouponOrderDecorator</span><span class="token punctuation">(</span><span class="token class-name">Coupon</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">&quot;FIVE_OFF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//使用vip和优惠券包装原订单对象，先8折，再减五元（本案例有顺序区别）</span>
        <span class="token class-name">Order</span> vipCouponOrder <span class="token operator">=</span> couponOrderDecorator<span class="token punctuation">.</span><span class="token function">decorator</span><span class="token punctuation">(</span>vipOrderDecorator<span class="token punctuation">.</span><span class="token function">decorator</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><pre class="language-txt"><code>Order(price=10.0, orderId=1, orderNo=0001, pay=3.0, promotions=[VIP享受8折优惠, 使用5.0元优惠券])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/202404291615980.png" alt="运行结果" tabindex="0" loading="lazy"><figcaption>运行结果</figcaption></figure>`,21);function S(F,N){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,u,d,k,n("ul",null,[n("li",null,[n("a",v,[m,e(a)]),s("、 "),n("a",b,[h,e(a)]),s("、 "),n("a",g,[f,e(a)]),s(" 和 "),n("a",y,[_,e(a)]),s(" 的所有代码都有以自身类型的对象作为参数的构造函数。")]),n("li",null,[n("a",j,[w,e(a)]),s("； "),n("a",O,[A,e(a)]),s("、 "),n("a",E,[x,e(a)]),s(" 和 "),n("a",C,[D,e(a)]),s(" 方法。")]),n("li",null,[n("a",V,[I,e(a)]),s(" 和 "),n("a",P,[B,e(a)])])]),q])}const R=t(i,[["render",S],["__file","装饰器.html.vue"]]),W=JSON.parse('{"path":"/guide/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/%E8%A3%85%E9%A5%B0%E5%99%A8.html","title":"装饰器模式","lang":"zh-CN","frontmatter":{"title":"装饰器模式","description":"装饰是一种结构设计模式， 允许你通过将对象放入特殊封装对象中来为原对象增加新的行为。 由于目标对象和装饰器遵循同一接口， 因此你可用装饰来对对象进行无限次的封装。 结果对象将获得所有封装器叠加而来的行为。 使用示例： 装饰在 Java 代码中可谓是标准配置， 尤其是在与流式加载相关的代码中。 Java 核心程序库中有一些关于装饰的示例： java.io...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/guide/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/%E8%A3%85%E9%A5%B0%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"疼了也不哭"}],["meta",{"property":"og:title","content":"装饰器模式"}],["meta",{"property":"og:description","content":"装饰是一种结构设计模式， 允许你通过将对象放入特殊封装对象中来为原对象增加新的行为。 由于目标对象和装饰器遵循同一接口， 因此你可用装饰来对对象进行无限次的封装。 结果对象将获得所有封装器叠加而来的行为。 使用示例： 装饰在 Java 代码中可谓是标准配置， 尤其是在与流式加载相关的代码中。 Java 核心程序库中有一些关于装饰的示例： java.io..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/202404291615980.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"装饰器模式\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/gaoyubo2/image/img/202404291615980.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"订单优惠券与会员机制","slug":"订单优惠券与会员机制","link":"#订单优惠券与会员机制","children":[{"level":3,"title":"Order:订单","slug":"order-订单","link":"#order-订单","children":[]},{"level":3,"title":"decorators","slug":"decorators","link":"#decorators","children":[]},{"level":3,"title":"constants","slug":"constants","link":"#constants","children":[]},{"level":3,"title":"Demo","slug":"demo","link":"#demo","children":[]}]}],"git":{},"readingTime":{"minutes":2.36,"words":709},"filePathRelative":"guide/设计模式/代码示例/装饰器.md","autoDesc":true}');export{R as comp,W as data};

import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,d as e}from"./app-D1py-eEI.js";const t={},p=e(`<p>Optional是一个没有子类的工具类，Optional是一个可以为null的容器对象，它的主要作用就是为了避 免Null检查，防止NullpointerException，</p><h3 id="对象的创建方式" tabindex="-1"><a class="header-anchor" href="#对象的创建方式"><span>对象的创建方式</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 第一种方式 通过of方法  of方法是不支持null的</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> op1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;gyb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Optional&lt;Object&gt; op2 = Optional.of(null);</span>
    <span class="token comment">// 第二种方式通过 ofNullable方法 支持null</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> op3 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">&quot;gyb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> op4 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 第三种方式 通过empty方法直接创建一个空的Optional对象</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> op5 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用方法" tabindex="-1"><a class="header-anchor" href="#常用方法"><span>常用方法</span></a></h3><h4 id="_1-get" tabindex="-1"><a class="header-anchor" href="#_1-get"><span>1. get</span></a></h4><p>用于获取 <code>Optional</code> 对象中的值。如果 <code>Optional</code> 对象为空，则会抛出 <code>NoSuchElementException</code> 异常。</p><p>具体含义如下：</p><ul><li>如果 <code>Optional</code> 对象中存在值，则返回该值。</li><li>如果 <code>Optional</code> 对象为空，则抛出 <code>NoSuchElementException</code> 异常。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果optional中有值，则返回该值，否则抛出NoSuchElementException异常</span>
<span class="token class-name">String</span> result <span class="token operator">=</span> optional<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-orelse" tabindex="-1"><a class="header-anchor" href="#_2-orelse"><span>2. orElse</span></a></h4><p>用于获取 <code>Optional</code> 对象中的值，如果该值不存在（即 <code>Optional</code> 对象为空），则返回指定的默认值。</p><p>具体含义如下：</p><ul><li>如果 <code>Optional</code> 对象中存在值，则返回该值。</li><li>如果 <code>Optional</code> 对象为空，则返回指定的默认值。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">T</span> other<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>someNullableString<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果optional中有值，则返回该值，否则返回 &quot;default&quot;</span>
<span class="token class-name">String</span> result <span class="token operator">=</span> optional<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-ispresent" tabindex="-1"><a class="header-anchor" href="#_3-ispresent"><span>3. isPresent</span></a></h4><p>用于检查 <code>Optional</code> 对象中是否存在值。</p><p>具体含义如下：</p><ul><li>如果 <code>Optional</code> 对象中存在值，则返回 <code>true</code>。</li><li>如果 <code>Optional</code> 对象为空，则返回 <code>false</code>。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果optional中有值，则返回true，否则返回false</span>
<span class="token keyword">boolean</span> present <span class="token operator">=</span> optional<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-orelseget" tabindex="-1"><a class="header-anchor" href="#_4-orelseget"><span>4. orElseGet</span></a></h4><p>用于获取 <code>Optional</code> 对象中的值，如果该值不存在（即 <code>Optional</code> 对象为空），则返回由提供的 <code>Supplier</code> 函数生成的默认值。</p><p>具体含义如下：</p><ul><li>如果 <code>Optional</code> 对象中存在值，则返回该值。</li><li>如果 <code>Optional</code> 对象为空，则调用提供的 <code>Supplier</code> 函数生成默认值，并返回该默认值。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> other<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果optional中有值，则返回该值，否则返回由提供的Supplier函数生成的默认值</span>
<span class="token class-name">String</span> result <span class="token operator">=</span> optional<span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-ifpersent" tabindex="-1"><a class="header-anchor" href="#_5-ifpersent"><span>5. ifPersent</span></a></h4><p>用于在 <code>Optional</code> 对象中存在值的情况下执行指定的操作。</p><p>具体含义如下：</p><ul><li>如果 <code>Optional</code> 对象中存在值，则执行给定的操作。</li><li>如果 <code>Optional</code> 对象为空，则不执行任何操作。</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> consumer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例用法如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 如果optional中有值，则执行consumer中指定的操作</span>
optional<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>value <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value is: &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39),o=[p];function l(c,i){return a(),s("div",null,o)}const r=n(t,[["render",l],["__file","Optional类.html.vue"]]),k=JSON.parse('{"path":"/guide/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/Optional%E7%B1%BB.html","title":"Optional类","lang":"zh-CN","frontmatter":{"title":"Optional类","description":"Optional是一个没有子类的工具类，Optional是一个可以为null的容器对象，它的主要作用就是为了避 免Null检查，防止NullpointerException， 对象的创建方式 常用方法 1. get 用于获取 Optional 对象中的值。如果 Optional 对象为空，则会抛出 NoSuchElementException 异常。 ...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/guide/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/Optional%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"疼了也不哭"}],["meta",{"property":"og:title","content":"Optional类"}],["meta",{"property":"og:description","content":"Optional是一个没有子类的工具类，Optional是一个可以为null的容器对象，它的主要作用就是为了避 免Null检查，防止NullpointerException， 对象的创建方式 常用方法 1. get 用于获取 Optional 对象中的值。如果 Optional 对象为空，则会抛出 NoSuchElementException 异常。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Optional类\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"对象的创建方式","slug":"对象的创建方式","link":"#对象的创建方式","children":[]},{"level":3,"title":"常用方法","slug":"常用方法","link":"#常用方法","children":[]}],"git":{},"readingTime":{"minutes":2.2,"words":659},"filePathRelative":"guide/JDK8新特性/Optional类.md","autoDesc":true}');export{r as comp,k as data};
